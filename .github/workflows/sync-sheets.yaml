name: Sync Google Sheets to repo

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes (UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch sheets as CSV
        shell: bash
        run: |
          set -e -o pipefail
          set -x
          mkdir -p data

          # name<space>url (use ONLY straight quotes if you quote)
          readarray -t MAP <<'EOF'
garden_reminders https://docs.google.com/spreadsheets/d/e/2PACX-1vSaed_vb8L-fCt5LeWG9YbP5YjE6pRFh-yxE66-VdCmGDy-qhwLFDIbwzpfWSx7jWP0bVtgizFOAi7D/pub?output=csv&gid=1236571867
garden_events https://docs.google.com/spreadsheets/d/e/2PACX-1vSaed_vb8L-fCt5LeWG9YbP5YjE6pRFh-yxE66-VdCmGDy-qhwLFDIbwzpfWSx7jWP0bVtgizFOAi7D/pub?output=csv&gid=459521443
garden_plants https://docs.google.com/spreadsheets/d/e/2PACX-1vSaed_vb8L-fCt5LeWG9YbP5YjE6pRFh-yxE66-VdCmGDy-qhwLFDIbwzpfWSx7jWP0bVtgizFOAi7D/pub?output=csv&gid=798549436
garden_shopping https://docs.google.com/spreadsheets/d/e/2PACX-1vSaed_vb8L-fCt5LeWG9YbP5YjE6pRFh-yxE66-VdCmGDy-qhwLFDIbwzpfWSx7jWP0bVtgizFOAi7D/pub?output=csv&gid=1430791601
EOF

          echo "MAP entries: ${#MAP[@]}"
          printf '%s\n' "${MAP[@]}"

          changed=0
          for line in "${MAP[@]}"; do
            name="${line%% *}"
            url="${line#* }"
            tmp="data/${name}.csv.tmp"
            out="data/${name}.csv"

            echo "::group::Downloading ${name}"
            echo "curl -> ${url}"
            curl -Lsf --retry 3 --retry-delay 2 -o "${tmp}" "${url}"
            wc -c < "${tmp}" || true
            echo "::endgroup::"

            if [ ! -f "${out}" ] || ! cmp -s "${tmp}" "${out}"; then
              mv "${tmp}" "${out}"
              git add "${out}"
              changed=1
              echo "Updated: ${out}"
            else
              rm -f "${tmp}"
              echo "No change: ${out}"
            fi
          done

          if [ "${changed}" -eq 1 ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git status --porcelain
            git commit -m "Sync sheets (CSV): $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "CSV step: Nothing to commit."
          fi

      - name: Also emit JSON alongside CSV
        shell: python
        run: |
          import csv, json, glob, os, subprocess
          print("Scanning for CSVs in data/ ...")
          csvs = sorted(glob.glob('data/*.csv'))
          for p in csvs: print("  found:", p)
          changed = False
          for csv_path in csvs:
              json_path = csv_path[:-4] + '.json'   # dot before json
              with open(csv_path, newline='') as f:
                  rows = list(csv.DictReader(f))
              new = json.dumps(rows, ensure_ascii=False, indent=2)
              old = None
              if os.path.exists(json_path):
                  with open(json_path, 'r', encoding='utf-8') as f:
                      old = f.read()
              if new != old:
                  with open(json_path, 'w', encoding='utf-8') as f:
                      f.write(new)
                  print("Updated:", json_path)
                  changed = True
              else:
                  print("No change:", json_path)
          if changed:
              subprocess.run(["git","add","data"], check=False)
              subprocess.run(["git","commit","-m","Sync sheets (JSON)"], check=False)
              subprocess.run(["git","push"], check=False)
          else:
              print("JSON step: Nothing to commit.")
